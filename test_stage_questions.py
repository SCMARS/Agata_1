#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞–≤–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ —Å—Ç–µ–π–¥–∂–µ–π
–ü—Ä–æ–≤–µ—Ä—è–µ–º 12 —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥
"""

import requests
import json
import time

API_URL = "http://localhost:8000/api/chat"

def test_stage_questions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ —Å—Ç–µ–π–¥–∂–µ–π"""
    
    user_id = "test_stage_questions"
    messages = []
    
    print("üß™ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ —Å—Ç–µ–π–¥–∂–µ–π")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    test_messages = [
        "–ø—Ä–∏–≤–µ—Ç",
        "–º–µ–Ω—è –∑–æ–≤—É—Ç –ì–ª–µ–±", 
        "–º–Ω–µ 30 –ª–µ—Ç",
        "—è –∏–∑ –ö–∏–µ–≤–∞",
        "–∂–∏–≤—É –∑–¥–µ—Å—å 5 –ª–µ—Ç",
        "—Ä–∞–±–æ—Ç–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º",
        "–∑–∞–Ω–∏–º–∞—é—Å—å —ç—Ç–∏–º 8 –ª–µ—Ç",
        "–Ω—Ä–∞–≤–∏—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã",
        "–∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ö–æ—Ä–æ—à–æ",
        "–ª—é–±–ª—é —Å–ø–æ—Ä—Ç",
        "–∏–≥—Ä–∞—é –≤ —Ñ—É—Ç–±–æ–ª",
        "—á–∏—Ç–∞—é –∫–Ω–∏–≥–∏"
    ]
    
    for i, user_message in enumerate(test_messages, 1):
        print(f"\nüìù –°–æ–æ–±—â–µ–Ω–∏–µ {i}: '{user_message}'")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        messages.append({"role": "user", "content": user_message})
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        response = requests.post(API_URL, json={
            "user_id": user_id,
            "messages": messages
        })
        
        if response.status_code == 200:
            data = response.json()
            assistant_response = data.get("response", "")
            has_question = data.get("has_question", False)
            
            print(f"ü§ñ –û—Ç–≤–µ—Ç –ê–≥–∞—Ç—ã: '{assistant_response}'")
            print(f"‚ùì –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å: {has_question}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–ª–∂–µ–Ω –ª–∏ –±—ã—Ç—å –≤–æ–ø—Ä–æ—Å (–∫–∞–∂–¥–æ–µ 2-–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞—è —Å 2-–≥–æ)
            should_have_question = (i % 2) == 0 and i >= 2
            print(f"üéØ –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–æ–ø—Ä–æ—Å: {should_have_question}")
            
            if should_have_question and not has_question:
                print(f"‚ùå –û–®–ò–ë–ö–ê! –°–æ–æ–±—â–µ–Ω–∏–µ {i} –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –Ω–æ –µ–≥–æ –Ω–µ—Ç!")
            elif not should_have_question and has_question:
                print(f"‚ùå –û–®–ò–ë–ö–ê! –°–æ–æ–±—â–µ–Ω–∏–µ {i} –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –Ω–æ –æ–Ω –µ—Å—Ç—å!")
            else:
                print(f"‚úÖ –û–ö")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            messages.append({"role": "assistant", "content": assistant_response})
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            break
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        time.sleep(1)
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_stage_questions()
