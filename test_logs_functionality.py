#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤
"""
import requests
import json
import time

def test_api_with_logging():
    """–¢–µ—Å—Ç—É—î–º–æ API –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º –ª–æ–≥—É–≤–∞–Ω–Ω—è–º"""
    
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º –ª–æ–≥—É–≤–∞–Ω–Ω—è–º...")
    print("=" * 60)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è–µ–º–æ –∑–¥–æ—Ä–æ–≤'—è API
    try:
        response = requests.get("http://localhost:8000/healthz")
        if response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–¥–æ—Ä–æ–≤–∏–π")
        else:
            print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –ù–µ –º–æ–∂—É –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ API: {e}")
        return
    
    # –¢–µ—Å—Ç–æ–≤—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó
    test_scenarios = [
        {
            "name": "–ó–Ω–∞–π–æ–º—Å—Ç–≤–æ (stage 1)",
            "user_id": "test_stage_1_user",
            "messages": [
                {"role": "user", "content": "–ø—Ä–∏–≤–µ—Ç"},
                {"role": "user", "content": "–∫–∞–∫ –¥–µ–ª–∞?"}
            ]
        },
        {
            "name": "–ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ä–æ–∑–º–æ–≤–∏ (stage 1 -> stage 2)",
            "user_id": "test_stage_2_user", 
            "messages": [
                {"role": "user", "content": "–ø—Ä–∏–≤–µ—Ç"},
                {"role": "user", "content": "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ"},
                {"role": "user", "content": "–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ"},
                {"role": "user", "content": "–∞ —á—Ç–æ –ª—é–±–∏—à—å –¥–µ–ª–∞—Ç—å?"},
                {"role": "user", "content": "–∫—Ä—É—Ç–æ"},
                {"role": "user", "content": "–∞ —Ä–∞–±–æ—Ç–∞–µ—à—å –≥–¥–µ?"}
            ]
        },
        {
            "name": "–¢–µ—Å—Ç –µ–º–æ—Ü—ñ–π–Ω–æ—ó —Ä–µ–∞–∫—Ü—ñ—ó",
            "user_id": "test_emotions_user",
            "messages": [
                {"role": "user", "content": "–º–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ —Å–µ–≥–æ–¥–Ω—è"},
                {"role": "user", "content": "–Ω–µ –∑–Ω–∞—é —á—Ç–æ –¥–µ–ª–∞—Ç—å"}
            ]
        },
        {
            "name": "–¢–µ—Å—Ç —á–∞—Å–æ–≤–∏—Ö –ø–∏—Ç–∞–Ω—å (–≤–µ—á—ñ—Ä)", 
            "user_id": "test_time_user",
            "messages": [
                {"role": "user", "content": "–∫–∞–∫ –¥–µ–ª–∞"},
                {"role": "user", "content": "—á—Ç–æ –¥–µ–ª–∞–µ—à—å –≤–µ—á–µ—Ä–æ–º?"}
            ]
        }
    ]
    
    for i, scenario in enumerate(test_scenarios, 1):
        print(f"\nüéØ –°—Ü–µ–Ω–∞—Ä—ñ–π {i}: {scenario['name']}")
        print("-" * 40)
        
        try:
            response = requests.post(
                "http://localhost:8000/api/chat",
                headers={"Content-Type": "application/json"},
                json={
                    "user_id": scenario["user_id"],
                    "messages": scenario["messages"]
                }
            )
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å –æ—Ç—Ä–∏–º–∞–Ω–∞: {len(result.get('parts', []))} —á–∞—Å—Ç–∏–Ω")
                print(f"üìä –ü–æ–≤–µ–¥—ñ–Ω–∫–æ–≤–∞ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—è: {result.get('current_strategy', 'Unknown')}")
                print(f"üé≠ –°—Ç–µ–π–¥–∂: {result.get('stage_number', 'Unknown')}")
                print(f"üìÖ –î–µ–Ω—å: {result.get('day_number', 'Unknown')}")
                
                # –ü–æ–∫–∞–∑—É—î–º–æ —á–∞—Å—Ç–∏–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
                parts = result.get('parts', [])
                if parts:
                    print(f"üí¨ –ü–µ—Ä—à–∞ —á–∞—Å—Ç–∏–Ω–∞: '{parts[0][:50]}...'")
                
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ API: {response.status_code}")
                print(f"   –í—ñ–¥–ø–æ–≤—ñ–¥—å: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {e}")
        
        # –ü–∞—É–∑–∞ –º—ñ–∂ —Ç–µ—Å—Ç–∞–º–∏
        time.sleep(2)
    
    print("\n" + "=" * 60)
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å:")
    print("   üé≠ [BEHAVIORAL] - –∞–Ω–∞–ª—ñ–∑ –ø–æ–≤–µ–¥—ñ–Ω–∫–∏")
    print("   üìä [STAGE_PROGRESS] - –ø—Ä–æ–≥—Ä–µ—Å —Å—Ç–µ–π–¥–∂—ñ–≤") 
    print("   ‚è∞ [TIME] - —á–∞—Å–æ–≤—ñ –¥–∞–Ω—ñ")
    print("   ‚è∞ [DAILY_QUESTIONS] - –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–∏—Ç–∞–Ω—å")
    print("   üìà [STAGE] - —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç–µ–π–¥–∂—ñ")

if __name__ == "__main__":
    test_api_with_logging()
