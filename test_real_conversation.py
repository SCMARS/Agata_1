#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –¥—ñ–∞–ª–æ–≥—É –∑ –ê–≥–∞—Ç–æ—é
–Ü–º—ñ—Ç—É—î —Å–ø—Ä–∞–≤–∂–Ω—é —Ä–æ–∑–º–æ–≤—É –≤ Telegram
"""

import requests
import json
import time

API_BASE = "http://localhost:8000"

def send_message(user_id, content):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –ø–æ–∫–∞–∑—É—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å"""
    try:
        response = requests.post(
            f"{API_BASE}/api/chat",
            json={"user_id": user_id, "messages": [{"role": "user", "content": content}]},
            timeout=15
        )
        
        if response.status_code == 200:
            result = response.json()
            parts = result.get('parts', [])
            delays = result.get('delays_ms', [])
            
            print(f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {content}")
            print(f"ü§ñ –ê–≥–∞—Ç–∞:")
            
            for i, (part, delay) in enumerate(zip(parts, delays)):
                if i > 0:
                    time.sleep(delay / 1000)  # –Ü–º—ñ—Ç—É—î–º–æ –∑–∞—Ç—Ä–∏–º–∫—É
                print(f"   {part}")
            
            # –ü–æ–∫–∞–∑—É—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
            print(f"üìä –°—Ç–µ–π–¥–∂: {result.get('stage_number', 'N/A')}")
            print(f"üìÖ –î–µ–Ω—å: {result.get('day_number', 'N/A')}")
            print(f"üé≠ –°—Ç—Ä–∞—Ç–µ–≥—ñ—è: {result.get('current_strategy', 'N/A')}")
            
            if 'behavioral_analysis' in result:
                ba = result['behavioral_analysis']
                if 'stage_progress' in ba:
                    sp = ba['stage_progress']
                    print(f"üìã –ü—Ä–æ–≥—Ä–µ—Å —Å—Ç–µ–π–¥–∂–∞: {sp.get('stage_name', 'N/A')}")
                    if 'next_theme_slot' in ba:
                        nts = ba['next_theme_slot']
                        print(f"üéØ –ù–∞—Å—Ç—É–ø–Ω–∞ —Ç–µ–º–∞: {nts.get('theme_name', 'N/A')}")
                        print(f"üîç –ù–∞—Å—Ç—É–ø–Ω–∏–π —Å–ª–æ—Ç: {nts.get('next_slot', 'N/A')}")
            
            print("-" * 50)
            return result
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ API: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return None

def simulate_real_conversation():
    """–Ü–º—ñ—Ç—É—î —Ä–µ–∞–ª—å–Ω—É —Ä–æ–∑–º–æ–≤—É –≤ Telegram"""
    print("üé≠ –Ü–ú–Ü–¢–ê–¶–Ü–Ø –†–ï–ê–õ–¨–ù–û–ì–û –î–Ü–ê–õ–û–ì–£ –í TELEGRAM")
    print("=" * 70)
    
    user_id = "real_user_test"
    
    # –î—ñ–∞–ª–æ–≥ –∑–≥—ñ–¥–Ω–æ –∑—ñ —Å—Ç–µ–π–¥–∂–∞–º–∏
    conversation = [
        # –ó–Ω–∞–π–æ–º—Å—Ç–≤–æ
        "–ü—Ä–∏–≤–µ—Ç!",
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–µ–π",
        "–ö–∞–∫ –¥–µ–ª–∞?",
        
        # –ñ–∏—Ç–µ–ª—å—Å—Ç–≤–æ  
        "–Ø –∏–∑ –ö–∏–µ–≤–∞",
        "–ñ–∏–≤—É –∑–¥–µ—Å—å —É–∂–µ 25 –ª–µ—Ç",
        "–ê —Ç—ã –æ—Ç–∫—É–¥–∞?",
        
        # –†–æ–±–æ—Ç–∞
        "–†–∞–±–æ—Ç–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º",
        "–£–∂–µ 5 –ª–µ—Ç –≤ IT",
        "–ê —Ç—ã –∫–µ–º —Ä–∞–±–æ—Ç–∞–µ—à—å?",
        
        # –•–æ–±–±–∏
        "–õ—é–±–ª—é –∏–≥—Ä–∞—Ç—å –≤ —Ç–µ–Ω–Ω–∏—Å",
        "–ê –µ—â–µ —á–∏—Ç–∞—é –∫–Ω–∏–≥–∏",
        "–ê —Ç—ã —á–µ–º —É–≤–ª–µ–∫–∞–µ—à—å—Å—è?",
    ]
    
    for i, message in enumerate(conversation, 1):
        print(f"\nüîÑ –ö—Ä–æ–∫ {i}:")
        send_message(user_id, message)
        time.sleep(2)  # –ü–∞—É–∑–∞ –º—ñ–∂ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏

def test_split_messages_real():
    """–¢–µ—Å—Ç —Ä–æ–∑–±–∏—Ç–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —è–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É Telegram"""
    print("\nüé≠ –¢–ï–°–¢ –†–û–ó–ë–ò–¢–ò–• –ü–û–í–Ü–î–û–ú–õ–ï–ù–¨ (—è–∫ –≤ Telegram)")
    print("=" * 70)
    
    user_id = "split_test_real"
    
    # –Ü–º—ñ—Ç—É—î–º–æ —à–≤–∏–¥–∫–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    messages = [
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç"},
        {"role": "user", "content": "–∫–∞–∫ –¥–µ–ª–∞?"},
        {"role": "user", "content": "—á—Ç–æ –¥–µ–ª–∞–µ—à—å?"}
    ]
    
    print("üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á (—à–≤–∏–¥–∫–æ –ø—ñ–¥—Ä—è–¥):")
    for msg in messages:
        print(f"   {msg['content']}")
    
    try:
        response = requests.post(
            f"{API_BASE}/api/chat",
            json={"user_id": user_id, "messages": messages},
            timeout=15
        )
        
        if response.status_code == 200:
            result = response.json()
            parts = result.get('parts', [])
            
            print(f"\nü§ñ –ê–≥–∞—Ç–∞:")
            for part in parts:
                print(f"   {part}")
            
            # –ê–Ω–∞–ª—ñ–∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
            full_response = " ".join(parts).lower()
            print(f"\nüîç –ê–Ω–∞–ª—ñ–∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:")
            
            checks = [
                ("–ø—Ä–∏–≤–µ—Ç" in full_response or "–¥–æ–±—Ä—ã–π" in full_response, "–ü—Ä–∏–≤—ñ—Ç–∞–ª–∞—Å—è"),
                ("–¥–µ–ª–∞" in full_response or "—Ö–æ—Ä–æ—à–æ" in full_response, "–í—ñ–¥–ø–æ–≤—ñ–ª–∞ –Ω–∞ '–∫–∞–∫ –¥–µ–ª–∞?'"),
                ("–¥–µ–ª–∞—é" in full_response or "—Ä–∞–±–æ—Ç–∞" in full_response or "–æ—Ç–¥—ã—Ö" in full_response, "–í—ñ–¥–ø–æ–≤—ñ–ª–∞ –Ω–∞ '—á—Ç–æ –¥–µ–ª–∞–µ—à—å?'"),
                (len(parts) <= 3, "–ö–æ—Ä–æ—Ç–∫—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (‚â§3 —á–∞—Å—Ç–∏–Ω–∏)"),
                ("–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä" not in full_response, "–ù–µ–º–∞—î –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä'")
            ]
            
            for check, desc in checks:
                print(f"   {'‚úÖ' if check else '‚ùå'} {desc}")
                
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ API: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    # –°–ø–æ—á–∞—Ç–∫—É —Ç–µ—Å—Ç —Ä–æ–∑–±–∏—Ç–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    test_split_messages_real()
    
    print("\n" + "="*70)
    input("üì± –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –∑ –ø–æ–≤–Ω–∏–º –¥—ñ–∞–ª–æ–≥–æ–º...")
    
    # –ü–æ—Ç—ñ–º –ø–æ–≤–Ω–∏–π –¥—ñ–∞–ª–æ–≥
    simulate_real_conversation()
