#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –∂–∏–≤–æ–≥–æ –æ–±—â–µ–Ω–∏—è
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.utils.short_message_processor import short_message_processor
from app.utils.stage_controller import stage_controller
from app.utils.message_splitter import message_splitter

def test_short_message_processor():
    """–¢–µ—Å—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º ShortMessageProcessor...")
    
    messages = [
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç"},
        {"role": "user", "content": "–∫–∞–∫ –¥–µ–ª–∞"},
        {"role": "user", "content": "—á—Ç–æ –¥–µ–ª–∞–µ—à—å"}
    ]
    
    result = short_message_processor.process_user_messages("test_user", messages)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    return result

def test_stage_controller():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ —Å—Ç–µ–π–¥–∂–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º StageController...")
    
    stage = stage_controller.get_user_stage("test_user", 1)
    print(f"   –°—Ç–µ–π–¥–∂ –¥–ª—è 1 —Å–æ–æ–±—â–µ–Ω–∏—è: {stage}")
    
    stage = stage_controller.get_user_stage("test_user", 5)
    print(f"   –°—Ç–µ–π–¥–∂ –¥–ª—è 5 —Å–æ–æ–±—â–µ–Ω–∏–π: {stage}")
    
    stage = stage_controller.get_user_stage("test_user", 10)
    print(f"   –°—Ç–µ–π–¥–∂ –¥–ª—è 10 —Å–æ–æ–±—â–µ–Ω–∏–π: {stage}")
    
    return stage

def test_message_splitter():
    """–¢–µ—Å—Ç —Ä–∞–∑–±–∏–≤–∞—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º MessageSplitter...")
    
    text = "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? –Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ –Ω–æ–≤—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ –∏ –∏–∑—É—á–∞—é —Ç—Ä–µ–π–¥–∏–Ω–≥."
    result = message_splitter.split_message(text)
    print(f"   –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: {text}")
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    return result

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –°–ò–°–¢–ï–ú–´")
    print("="*50)
    
    test_short_message_processor()
    print()
    test_stage_controller()
    print()
    test_message_splitter()
    
    print("\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
