#!/bin/bash

# Agatha AI Companion - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞
stop_api() {
    if [ -f "api.pid" ]; then
        API_PID=$(cat api.pid)
        if kill -0 $API_PID 2>/dev/null; then
            print_status "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º API —Å–µ—Ä–≤–µ—Ä (PID: $API_PID)..."
            kill $API_PID
            print_success "API —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            print_warning "API —Å–µ—Ä–≤–µ—Ä —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        rm -f api.pid
    else
        print_warning "PID —Ñ–∞–π–ª API —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram –±–æ—Ç–∞
stop_bot() {
    if [ -f "bot.pid" ]; then
        BOT_PID=$(cat bot.pid)
        if kill -0 $BOT_PID 2>/dev/null; then
            print_status "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Telegram –±–æ—Ç–∞ (PID: $BOT_PID)..."
            kill $BOT_PID
            print_success "Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            print_warning "Telegram –±–æ—Ç —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        rm -f bot.pid
    else
        print_warning "PID —Ñ–∞–π–ª –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_docker() {
    print_status "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker-compose down --remove-orphans
    print_success "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
force_stop() {
    print_status "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –∏–º–µ–Ω–∏
    pkill -f "run_server.py" 2>/dev/null || true
    pkill -f "run_telegram_bot.py" 2>/dev/null || true
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
    if lsof -ti:8000 &>/dev/null; then
        print_status "–û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç 8000..."
        lsof -ti:8000 | xargs kill -9 2>/dev/null || true
    fi
    
    print_success "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup() {
    print_status "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -f api.pid bot.pid
    print_success "–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
show_status() {
    echo ""
    echo "=========================================="
    echo "üõë Agatha AI Companion - –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    echo "=========================================="
    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    if curl -s http://localhost:8000/healthz &>/dev/null; then
        echo "  ‚Ä¢ API —Å–µ—Ä–≤–µ—Ä: ‚ùå –í—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "  ‚Ä¢ API —Å–µ—Ä–≤–µ—Ä: ‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if docker-compose ps | grep -q "Up"; then
        echo "  ‚Ä¢ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: ‚ùå –í—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞—é—Ç"
    else
        echo "  ‚Ä¢ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: ‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    
    echo ""
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: ./start_all.sh"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üõë Agatha AI Companion - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo "=========================================="
    
    stop_api
    stop_bot
    stop_docker
    cleanup
    show_status
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    --force)
        print_warning "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
        force_stop
        stop_docker
        cleanup
        show_status
        ;;
    --help|-h)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
        echo ""
        echo "–û–ø—Ü–∏–∏:"
        echo "  --force    –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
        echo "  --help     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo ""
        ;;
    *)
        main
        ;;
esac
